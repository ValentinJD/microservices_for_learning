version: '2'

services:
  consul:
    image: consul:1.1.0
    hostname: localhost
    ports:
      - 8500:8500
  storage:
    image: 'storage-0.0.1:latest'
    build:
      context: storage
    container_name: storage
    depends_on:
      - dbstorage
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dbstorage:5432/storage
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
    ports:
      - "8081:8081"
  dbstorage:
    image: 'postgres:13.1-alpine'
    container_name: dbstorage
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=storage
    volumes:
      - "c://db-data:/var/lib/postgresql/data"
    ports:
         - "5434:5432"
  shop:
    image: 'shop-0.0.1:latest'
    build:
      context: shop
    container_name: shop
    depends_on:
      - dbshop
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dbshop:5432/shop
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
    ports:
      - "8080:8080"
  dbshop:
      image: 'postgres:13.1-alpine'
      container_name: dbshop
      environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_DB=shop
      volumes:
        - "c://db-data2:/var/lib/postgresql/data"
      ports:
        - "5435:5432"
  zookeeper:
    image: wurstmeister/zookeeper
    expose:
      - "2181"
  kafka:
      image: wurstmeister/kafka
      ports:
        - "9092:9092"
      expose:
        - "9093"
      environment:
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
        KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093 #,OUTSIDE://localhost:9092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT #,OUTSIDE:SASL_PLAINTEXT
        KAFKA_LISTENERS: INSIDE://0.0.0.0:9093 #,OUTSIDE://0.0.0.0:9092
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
#        KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"
        KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
        KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      depends_on:
        - zookeeper
      volumes:
        - ./:/etc/kafka